import{f as O,g as R,h as S,k as F,l as I}from"./client-D22F4JlR.js";function w(e,o){const n=o;return O(n.url),Object.assign(async(a,s)=>n({method:e,payload:a||void 0,requestInit:s?.requestInit}),{url:o.url})}const y="server-fn-return-type",h="server-fn-payload-type";async function T(e,o,n){var a,s;const r=o[0];if(R(r)&&r.method){const t=r,l=t.payload instanceof FormData?"formData":t.payload instanceof Request?"request":"payload",m=new Headers({[h]:l,...l==="payload"?{"content-type":"application/json",accept:"application/json"}:{},...((a=t.requestInit)==null?void 0:a.headers)instanceof Headers?Object.fromEntries(t.requestInit.headers.entries()):((s=t.requestInit)==null?void 0:s.headers)||{}});if(t.method==="GET"){const c=t.payload!==void 0?S({payload:t.payload}).substring(1):"";c&&(e+=`&${c}`)}const $=new Request(e,{...t.requestInit,method:t.method,headers:m,...t.method==="POST"?{body:l==="formData"?t.payload:JSON.stringify(t.payload??null)}:{}}),q=await n($),i=await v(q);if(["rsc"].includes(i.headers.get(y)))return i.body;if(["json"].includes(i.headers.get(y))){const c=await i.text(),d=c?JSON.parse(c):void 0;if(F(d)||I(d))throw d;return d}return i}const j=new Request(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",[h]:"args"},body:JSON.stringify(o)}),f=await v(await n(j)),p=f.headers.get("content-type"),u=await f.text();return p&&p.includes("application/json")?u?JSON.parse(u):void 0:u}async function v(e){if(!e.ok){const o=await(async()=>{const n=e.headers.get("content-type");return n&&n.includes("application/json")?await e.json():await e.text()})();throw new Error([`Request failed with status ${e.status}`,`${JSON.stringify(o,null,2)}`].join(`

`))}return e}function b(e,o,n){return`${e}/_server/?_serverFnId=${encodeURI(o)}&_serverFnName=${encodeURI(n)}`}function g(e,o,n){const a=b(window.location.origin,o,n);return Object.assign((...r)=>T(a,r,fetch),{url:a})}const P=w("GET",g(x,"c_7865","$$function0")),E=w("GET",g(_,"c_7865","$$function1"));async function x(e){}async function _(){}export{P as a,E as f};
